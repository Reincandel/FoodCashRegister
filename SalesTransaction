/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalchallenge;

import Food.Snack;
import Food.Drink;
import Food.Merchandise;
import java.text.DecimalFormat;
import java.util.ArrayList;

/**
 * declare the global variable
 *
 * @author reinc
 */
public class SalesTransaction {

    private String transactDateTime;
    private String customerName;
    private ArrayList<Drink> drinks;
    private ArrayList<Snack> snacks;
    private ArrayList<Merchandise> merchandise;
    private String customerPaymentMethod;
    private String creditCardName;
    private String creditCardNumber;
    private double amountPaid;

    /**
     * initialize the variables
     *
     * @param transactDateTime
     * @param customerName
     */
    public SalesTransaction(String transactDateTime, String customerName) {
        this.transactDateTime = transactDateTime;
        this.customerName = customerName;
        this.drinks = new ArrayList<Drink>();
        this.snacks = new ArrayList<Snack>();
        this.merchandise = new ArrayList<Merchandise>();
    }

    /**
     * get the date
     *
     * @return
     */
    public String getTransactDateTime() {
        return transactDateTime;
    }

    /**
     * set the date time
     *
     * @param transactDateTime
     */
    public void setTransactDateTime(String transactDateTime) {
        this.transactDateTime = transactDateTime;
    }

    /**
     * get the name
     *
     * @return
     */
    public String getCustomerName() {
        return customerName;
    }

    /**
     * set the name
     *
     * @param customerName
     */
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    /**
     * get the array of drinks
     *
     * @return
     */
    public ArrayList<Drink> getDrinks() {
        return drinks;
    }

    /**
     * set the array of drinks
     *
     * @param drinks
     */
    public void setDrinks(ArrayList<Drink> drinks) {
        this.drinks = drinks;
    }

    /**
     * get the array of snacks
     *
     * @return
     */
    public ArrayList<Snack> getSnacks() {
        return snacks;
    }

    /**
     * set the array of snacks
     *
     * @param snacks
     */
    public void setSnacks(ArrayList<Snack> snacks) {
        this.snacks = snacks;
    }

    /**
     * get the merchandise
     *
     * @return
     */
    public ArrayList<Merchandise> getMerchandises() {
        return merchandise;
    }

    /**
     * set the merchandise
     *
     * @param merchandises
     */
    public void setMerchandise(ArrayList<Merchandise> merchandises) {
        this.merchandise = merchandises;
    }

    /**
     * get the payment method
     *
     * @return
     */
    public String getCustomerPaymentMethod() {
        return customerPaymentMethod;
    }

    /**
     * set the payment method
     *
     * @param customerPaymentMethod
     */
    public void setCustomerPaymentMethod(String customerPaymentMethod) {
        this.customerPaymentMethod = customerPaymentMethod;
    }

    /**
     * get the credit card name
     *
     * @return
     */
    public String getCreditCardName() {
        return creditCardName;
    }

    /**
     * set the credit card name
     *
     * @param creditCardName
     */
    public void setCreditCardName(String creditCardName) {
        this.creditCardName = creditCardName;
    }

    /**
     * get the credit card number
     *
     * @return
     */
    public String getCreditCardNumber() {
        return creditCardNumber;
    }

    /**
     * set the credit card number
     *
     * @param creditCardNumber
     */
    public void setCreditCardNumber(String creditCardNumber) {
        this.creditCardNumber = creditCardNumber;
    }

    /**
     * get the amount paid
     *
     * @return
     */
    public double getAmountPaid() {
        return amountPaid;
    }

    /**
     * set the amount paid
     *
     * @param amountPaid
     */
    public void setAmountPaid(double amountPaid) {
        this.amountPaid = amountPaid;
    }

    /**
     * total the sum of all totals from snack, drinks, and merchandise and put
     * that into a total and return the total
     *
     * @return
     */
    public double tabulateSale() {
        double totalDrinkCosts = 0;
        double totalSnackCosts = 0;
        double totalMerchandiseCost = 0;
        double grandTotal = 0;
        double salesTax;
        final double taxRate = .07;

        for (int i = 0; i < getSnacks().size(); i++) {
            totalSnackCosts += getSnacks().get(i).getCost();
        }

        for (int i = 0; i < getDrinks().size(); i++) {
            totalDrinkCosts += getDrinks().get(i).getCost();
        }

        for (int i = 0; i < getMerchandises().size(); i++) {
            totalMerchandiseCost += getMerchandises().get(i).getUnitPrice();
        }

        grandTotal = totalSnackCosts + totalDrinkCosts + totalMerchandiseCost;

        salesTax = grandTotal * taxRate;
        grandTotal += salesTax;
        return grandTotal;
    }

    /**
     * print toString
     *
     * @return
     */
    @Override
    public String toString() {
        DecimalFormat df = new DecimalFormat("#.##");
        String receipt = "\n----------------------------------------------\n";
        receipt
                += transactDateTime + " "
                + customerName + " ";
        if (!drinks.isEmpty()) {
            receipt += " \n Drinks: " + drinks;
        }
        if (!snacks.isEmpty()) {
            receipt += " \n Snacks: " + snacks;
        }

        if (!merchandise.isEmpty()) {
            receipt += " \n Merchandise: " + merchandise;
        }

        receipt += " \n Payment Method: " + customerPaymentMethod;
        if (customerPaymentMethod != null && customerPaymentMethod.equalsIgnoreCase("credit card")) {
            receipt += "\n Credit Card: " + creditCardName
                    + " Credit Card Number: " + creditCardNumber;
        }
        receipt += " AmountPaid=" + df.format(amountPaid);
        receipt += "\n----------------------------------------------\n";

        return receipt;
    }

}
